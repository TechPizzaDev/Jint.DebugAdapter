// <auto-generated />
namespace Jither.DebugAdapter.Protocol
{
    internal static partial class ProtocolMessageRegistry
    {
        private static void VisitRegisterEvent()
        {
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.BreakpointEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.CapabilitiesEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.ContinuedEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.ExitedEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.InitializedEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.InvalidatedEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.LoadedSourceEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.MemoryEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.ModuleEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.OutputEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.ProcessEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.ProgressEndEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.ProgressStartEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.ProgressUpdateEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.StoppedEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.TerminatedEvent>();
            RegisterEvent<global::Jither.DebugAdapter.Protocol.Events.ThreadEvent>();
        }
    }
}